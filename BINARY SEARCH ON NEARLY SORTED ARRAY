
#include <iostream>
#include <bits/stdc++.h>
#include <math.h>
#include<vector> 
using namespace std;


//NearlySortedArray is one in which element at ith index can be at i-1, i, i+1 index
int BinarySearchNearlySortedArray(vector<int> arr, int n)
{
	int target = n;
	int start =0;
	int end = arr.size() - 1;
	int mid = ( start +  (end - start)/2);
	int ans = -1;
	
	while(start <= end)
	{
		if(arr[mid] == target)
			return mid;
		if(arr[mid-1] >0 && arr[mid-1] == target)
			return mid -1;
		if(arr[mid+1] < arr.size() && arr[mid+1] == target)
			return mid+1;
			
			
		if(arr[mid] < target) // search right part of array
			start = mid +2; (though start = mid +1 also works)
		else
					//search left part of array
			end = mid -2;  (though start = mid +1 also works)
		
		mid = ( start +  (end - start)/2);
	}
	
	return ans;
}

int main() {
  vector<int> arr = {1,3,2,4,5,6,7,8,9};
  cout<<endl<<BinarySearchNearlySortedArray(arr, 9);
}
