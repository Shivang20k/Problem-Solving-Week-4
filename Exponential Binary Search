#include <iostream>
#include <bits/stdc++.h>
#include <math.h>
#include<vector> 
using namespace std;


int BinarySearch(vector<int> arr,int s, int e, int target){
	
	int start, end, mid;
	start=s;
	end= e;
	mid = start + ((end-start)/2);
	
	while(start <= end)
	{
		if(arr[mid]==target){
			return mid;
		}
		else if( target < arr[mid]){
			end = mid - 1;
		}
		else
			start = mid + 1;
			
		mid = start + ((end-start)/2);
	}
	return -1;
}

void exponentialSearch(vector<int> arr, int target)
{
  int n =arr.size();
  // in exponentialSearch we try to find the sub-array between which target element will be present
  // for this we increase i by 2^n 
  
  if(arr[0]==target)
    cout<< 0;
  else{
    int i =1;
    while(i<n && arr[i]<=target)
    {
      i*=2;
    }
    cout<<BinarySearch(arr, i/2, min(i, n-1), target);
  }
}
int main() {
  vector<int> arr = {1,2,3,4,5,6,7,8,9,11};
  exponentialSearch(arr, 3);
  cout<<endl<<"done";
}
